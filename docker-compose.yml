services:
  ba-backend:
    container_name: ba-backend
    image: your-docker-hub-username/your-repo-name:your-image-tag
    expose: 8000
    volumes:
      - static_volume:/app/app/static
      - sqlite-data:/app/data/rel_db
      - sqlite-jobstore:/app/data/jobstore
      - pihole-etc:/app/data/pihole_etc
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=production
      - SECRET_KEY=<your_secret_key>
      - SQLITE_URL=sqlite:////app/data/rel_db/sqlite.db
      - INFLUXDB_URL=http://influxdb:8086/
      - INFLUXDB_AUTH_TOKEN=<your_influxdb_auth_token>
      - INFLUXDB_ORG=home
      - INFLUXDB_BUCKET=communications
      - PIHOLE_DB_URL=sqlite:////app/data/pihole_etc/pihole-FTL.db
      # Not sure if needed
      - JOBSTORE_DB_URL=sqlite:////app/data/jobstore/jobstore.db

  nginx:
    container_name: nginx_reverse_proxy
    image: nginx:latest
    ports:
      - "8080:80"
    volumes:
      - ./nginx/:/etc/nginx/conf.d/
      - static_volume:/app/app/static
    environment:
      - LOCAL_NETWORK_IP_RANGE=${REV_SERVER_CIDR}
    command: /bin/bash -c "envsubst '$$LOCAL_NETWORK_IP_RANGE' < /etc/nginx/nginx.conf.template > /etc/nginx/nginx.conf && rm /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  influxdb:
    container_name: influxdb
    image: influxdb:2.7.1-alpine
    expose: 8086
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=admin
      - DOCKER_INFLUXDB_INIT_PASSWORD=adminpw
      - DOCKER_INFLUXDB_INIT_ORG=home
      - DOCKER_INFLUXDB_INIT_BUCKET=communications
      - DOCKER_INFLUXDB_INIT_RETENTION=1y
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=<your_influxdb_auth_token>

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "${HTTPPORT}:80/tcp"
      - "${HTTPSPORT}:443/tcp"
    environment:
      - TZ: ${TZ}
      - WEBPASSWORD: ${WEBPASSWORD}
      - FTLCONF_LOCAL_IPV4: ${FTLCONF_LOCAL_IPV4}
      - PIHOLE_DNS_: ${DNSSERVER}
      - REV_SERVER: ${REV_SERVER}
      - REV_SERVER_TARGET: ${REV_SERVER_TARGET}
      - REV_SERVER_CIDR: ${REV_SERVER_CIDR}
    volumes:
      - "pihole-etc:/etc/pihole"
      - "pihole-dnsmasq:/etc/dnsmasq.d"
      - "${RESOLV_CONF}:/etc/resolv.conf"
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: grafana/grafana-oss:latest
    ports:
      - "3000:3000"
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      - GF_LOG_MODE="console file"


  homeassistant:
    container_name: homeassistant
    image: ghcr.io/homeassistant/home-assistant:stable
    restart: unless-stopped
    network_mode: host
    privileged: true
    volumes:
      - homeassistant-config:/config
      - /etc/localtime:/etc/localtime:ro

volumes:
  sqlite-data:
  sqlite-jobstore:
  influxdb-data:
  influxdb-config:
  pihole-etc:
  pihole-dnsmasq:
  grafana-data:
  homeassistant-config:
  static_volume: