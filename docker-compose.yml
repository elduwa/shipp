services:
  shipp:
    container_name: shipp
    image: elliottwallace/shipp:latest
    expose:
      - 8000
    volumes:
      - static_volume:/opt/webapp/app/static
      - sqlite-data:/opt/webapp/data/rel_db
      - pihole-etc:/opt/webapp/data/pihole_etc
    environment:
      - SECRET_KEY=<your_secret_key>
      - API_SECRET_KEY=<your_api_secret_key>
      - SQLITE_URL=sqlite:////opt/webapp/data/rel_db/sqlite.db
      - INFLUXDB_ACTIVE=true
      - INFLUXDB_URL=http://influxdb:8086/
      - INFLUXDB_AUTH_TOKEN=<your_influxdb_auth_token>
      - INFLUXDB_ORG=home
      - INFLUXDB_BUCKET=communications
      - PIHOLE_DOMAIN=<your_pihole_domain>
      - PIHOLE_AUTH_TOKEN=<your_pihole_auth_token>
      - PIHOLE_DB_URL=sqlite:////opt/webapp/data/pihole_etc/gravity.db
      - MAIL_SERVER=<your_mail_server>
      - MAIL_PORT=<your_mail_port>
      - MAIL_USERNAME=<your_mail_username>
      - MAIL_PASSWORD=<your_mail_password>
      - SCHEDULER_TIMEINTERVAL=3600
      - TZ=<your_timezone>
    restart: unless-stopped

  nginx:
    container_name: nginx_reverse_proxy
    image: nginx:stable-bullseye
    depends_on:
      - shipp
    ports:
      - "8080:80"
    volumes:
      - ./nginx/nginx.conf/:/etc/nginx/nginx.conf
      - ./nginx/templates:/etc/nginx/templates
      - static_volume:/usr/src/app/static
    environment:
      - LOCAL_NETWORK_IP_RANGE=${REV_SERVER_CIDR}
    restart: unless-stopped

  influxdb:
    container_name: influxdb
    image: influxdb:2.7.1-alpine
    expose: 8086
    volumes:
      - influxdb-data:/var/lib/influxdb2
      - influxdb-config:/etc/influxdb2
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=<your-username>
      - DOCKER_INFLUXDB_INIT_PASSWORD=<your-initial-password>
      - DOCKER_INFLUXDB_INIT_ORG=home
      - DOCKER_INFLUXDB_INIT_BUCKET=communications
      - DOCKER_INFLUXDB_INIT_RETENTION=4w
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=<your_influxdb_auth_token>
    restart: unless-stopped

  pihole:
    container_name: pihole
    image: pihole/pihole:latest
    ports:
      - "53:53/tcp"
      - "53:53/udp"
      - "80:80/tcp"
      - "443:443/tcp"
    environment:
      - "TZ:${TZ}"
      - "WEBPASSWORD:${WEBPASSWORD}"
      - "FTLCONF_LOCAL_IPV4:${FTLCONF_LOCAL_IPV4}"
      - "PIHOLE_DNS_:${DNSSERVER}"
      - "REV_SERVER:${REV_SERVER}"
      - "REV_SERVER_TARGET: ${REV_SERVER_TARGET}"
      - "REV_SERVER_CIDR:${REV_SERVER_CIDR}"
    volumes:
      - "pihole-etc:/etc/pihole"
      - "pihole-dnsmasq:/etc/dnsmasq.d"
      - "./resolv.conf:/etc/resolv.conf"
    restart: unless-stopped

  homeassistant:
    container_name: homeassistant
    image: ghcr.io/homeassistant/home-assistant:stable
    restart: unless-stopped
    network_mode: host
    privileged: true
    volumes:
      - homeassistant-config:/config
      - /etc/localtime:/etc/localtime:ro

volumes:
  sqlite-data:
  influxdb-data:
  influxdb-config:
  pihole-etc:
  pihole-dnsmasq:
  homeassistant-config:
  static_volume: